---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/auth":
    post:
      summary: create user
      tags:
      - Users Creation
      parameters: []
      responses:
        '200':
          description: Successful creation
        '422':
          description: Unsuccessful creation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hadi@test.com
                password:
                  type: string
                  example: hadi1234
                name:
                  type: string
                  example: Hadi
              required:
              - email
              - password
              - name
  "/room_reservations/within_range":
    parameters:
    - name: access-token
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: token-type
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: client
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: expiry
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: uid
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: Authorization
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: room_reservation
      in: query
      schema:
        type: object
        properties:
          room_reservation[check_in]:
            type: string
            example: 01-01-2023
          room_reservation[check_out]:
            type: string
            example: 01-01-2023
    get:
      summary: within_range room_reservation
      tags:
      - Reservations Within range
      responses:
        '200':
          description: Successful
        '401':
          description: Un-authenticated when no user is signed-in
        '400':
          description: Bad request when given invalid format for check-in, check-out
            or both
  "/room_reservations/{id}/cancel":
    parameters:
    - name: access-token
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: token-type
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: client
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: expiry
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: uid
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: Authorization
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: id
      in: path
      description: RoomReservation ID
      required: true
      schema:
        type: string
    patch:
      summary: cancel room_reservation
      tags:
      - Cancel specific Room Reservation (must be authenticated user's reservation)
      responses:
        '200':
          description: Successful cancelation
        '401':
          description: Un-authenticated when no user is signed-in
        '400':
          description: Bad request when user sends reservation id that does not belong
            to them
  "/room_reservations":
    parameters:
    - name: access-token
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: token-type
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: client
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: expiry
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: uid
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: Authorization
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    post:
      summary: create room_reservation
      tags:
      - Create Room Reservation
      parameters: []
      responses:
        '201':
          description: Successful creation
        '422':
          description: Creation failed due to invalid params
        '401':
          description: Un-authenticated when no user is signed-in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                check_in:
                  type: string
                  example: 01-01-2023
                check_out:
                  type: string
                  example: 10-01-2023
                room_id:
                  type: integer
                  example: 1
                  description: reference to an already existing room
              required:
              - check_in
              - check_out
              - room_id
  "/rooms":
    parameters:
    - name: access-token
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: token-type
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: client
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: expiry
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: uid
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: Authorization
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    get:
      summary: list rooms
      tags:
      - Room index
      responses:
        '200':
          description: Successful when user is signed-in
        '401':
          description: Un-authenticated when no user is signed-in
    post:
      summary: create room
      tags:
      - Room Creation
      parameters: []
      responses:
        '201':
          description: Successful creation
        '422':
          description: Creation fails on invalid parameters
        '401':
          description: Un-authenticated when no user is signed-in
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  type: integer
                  example: 2
                price_per_night:
                  type: decimal
                  example: 15.57
                description:
                  type: string
                  example: Our most luxurious room
              required:
              - capacity
              - price_per_night
  "/rooms/{id}":
    parameters:
    - name: access-token
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: token-type
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: client
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: expiry
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: uid
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: Authorization
      in: header
      required: true
      description: can be optained from the headers response of the sign-in action
      schema:
        type: string
    - name: id
      in: path
      description: Room ID
      required: true
      schema:
        type: string
    - name: room
      in: body
      schema:
        type: object
        properties:
          capacity:
            type: integer
            example: 2
          price_per_night:
            type: decimal
            example: 15.57
          description:
            type: string
            example: Our most luxurious room
    patch:
      summary: update room
      tags:
      - Room patch Update
      responses:
        '200':
          description: successful
        '422':
          description: Unsucessful due to invalid parameters
        '401':
          description: Un-authenticated when no user is signed-in
        '404':
          description: Not-found when sending room id that does not exist
    put:
      summary: update room
      tags:
      - Room put Update (just testing successful scenario as other scenarios are tested
        in patch)
      responses:
        '200':
          description: successful
  "/auth/sign_in":
    post:
      summary: create session
      tags:
      - Users Authentication
      parameters: []
      responses:
        '200':
          description: successful
        '401':
          description: invalid login credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: hadi@test.com
                password:
                  type: string
                  example: hadi1234
              required:
              - email
              - password
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
